/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FishNFT, FishNFTInterface } from "../../contracts/FishNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_VRFCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyhash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum FishNFT.FishTypes",
        name: "fishType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "Fished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fishID",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "throwBait",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "COORDINATOR",
    outputs: [
      {
        internalType: "contract VRFCoordinatorV2Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_globalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "too",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fishByIds",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "enum FishNFT.FishTypes",
        name: "typeFish",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "typeF",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newkeyHash",
        type: "bytes32",
      },
    ],
    name: "newKeyHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIdToSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIdToTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newsubcription",
        type: "uint64",
      },
    ],
    name: "setNewSubcription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newPauseState",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "throwABait",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002d1a38038062002d1a833981016040819052620000349162000204565b81604051806040016040528060078152602001665a58616c75706160c81b8152506040518060400160405280600381526020016205a4c560ec1b815250816000908162000082919062000307565b50600162000091828262000307565b50506007805460ff191690555060016008556001600160a01b03908116608052600e80546001600160a01b03191691841691909117905560408051808201909152601481527f48747470732e3139322e3136382e30312e30312f0000000000000000000000006020820152600f906200010b908262000307565b50600c8054600a805461ffff191660031790556001600160401b03851668010000000000000000026001600160801b0319909116176402000493e0179055620001566000336200015f565b505050620003d3565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16620002005760008281526006602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001bf3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000806000606084860312156200021a57600080fd5b83516001600160401b03811681146200023257600080fd5b60208501519093506001600160a01b03811681146200025057600080fd5b80925050604084015190509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200028d57607f821691505b602082108103620002ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030257600081815260208120601f850160051c81016020861015620002dd5750805b601f850160051c820191505b81811015620002fe57828155600101620002e9565b5050505b505050565b81516001600160401b0381111562000323576200032362000262565b6200033b8162000334845462000278565b84620002b4565b602080601f8311600181146200037357600084156200035a5750858301515b600019600386901b1c1916600185901b178555620002fe565b600085815260208120601f198616915b82811015620003a45788860151825594840194600190910190840162000383565b5085821015620003c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051612924620003f6600039600081816109f30152610a3501526129246000f3fe6080604052600436106101fb5760003560e01c80635c975abb1161010c578063a217fddf1161009a578063c87b56dd1161006c578063c87b56dd14610646578063d082e38114610666578063d547741f1461067c578063d64a0d0c1461069c578063e985e9c5146106b357005b8063a217fddf146105d1578063a22cb465146105e6578063b88d4fde14610606578063bedb86fb1461062657005b80636ff1c9bc116100de5780636ff1c9bc1461052657806370a08231146105465780638e2de4d31461056657806391d148541461059c57806395d89b41146105bc57005b80635c975abb146104945780636352211e146104ac5780636844b827146104cc5780636c0360eb1461051157005b8063254bb742116101895780633b2bcbf11161015b5780633b2bcbf1146103f457806340c10f191461041457806342842e0e1461043457806342966c681461045457806355f804b31461047457005b8063254bb742146103745780632750cfdc146103945780632f2ff15d146103b457806336568abe146103d457005b8063095ea7b3116101cd578063095ea7b3146102cf5780630a564c08146102ef5780631fe543e31461030457806323b872dd14610324578063248a9ca31461034457005b806301ffc9a71461020457806306fdde031461023a5780630750b1631461025c578063081812fc1461029757005b3661020257005b005b34801561021057600080fd5b5061022561021f36600461202a565b50600090565b60405190151581526020015b60405180910390f35b34801561024657600080fd5b5061024f6106fc565b6040516102319190612097565b34801561026857600080fd5b506102896102773660046120aa565b60136020526000908152604090205481565b604051908152602001610231565b3480156102a357600080fd5b506102b76102b23660046120aa565b61078e565b6040516001600160a01b039091168152602001610231565b3480156102db57600080fd5b506102026102ea3660046120df565b6107b5565b3480156102fb57600080fd5b506102896108cf565b34801561031057600080fd5b5061020261031f366004612150565b6109e8565b34801561033057600080fd5b5061020261033f366004612202565b610a70565b34801561035057600080fd5b5061028961035f3660046120aa565b60009081526006602052604090206001015490565b34801561038057600080fd5b5061020261038f36600461223e565b610aa2565b3480156103a057600080fd5b506102026103af3660046120aa565b610ae1565b3480156103c057600080fd5b506102026103cf366004612268565b610af2565b3480156103e057600080fd5b506102026103ef366004612268565b610b17565b34801561040057600080fd5b50600e546102b7906001600160a01b031681565b34801561042057600080fd5b5061020261042f3660046120df565b610b91565b34801561044057600080fd5b5061020261044f366004612202565b610c62565b34801561046057600080fd5b5061020261046f3660046120aa565b610c7d565b34801561048057600080fd5b5061020261048f3660046122ec565b610cae565b3480156104a057600080fd5b5060075460ff16610225565b3480156104b857600080fd5b506102b76104c73660046120aa565b610cc5565b3480156104d857600080fd5b506105036104e73660046120aa565b6012602052600090815260409020805460019091015460ff1682565b60405161023192919061236d565b34801561051d57600080fd5b5061024f610d2b565b34801561053257600080fd5b50610202610541366004612381565b610db9565b34801561055257600080fd5b50610289610561366004612381565b610dc4565b34801561057257600080fd5b506102b76105813660046120aa565b6010602052600090815260409020546001600160a01b031681565b3480156105a857600080fd5b506102256105b7366004612268565b610e4a565b3480156105c857600080fd5b5061024f610e75565b3480156105dd57600080fd5b50610289600081565b3480156105f257600080fd5b506102026106013660046123ac565b610e84565b34801561061257600080fd5b506102026106213660046123d6565b610e8f565b34801561063257600080fd5b50610202610641366004612452565b610ec7565b34801561065257600080fd5b5061024f6106613660046120aa565b610ee7565b34801561067257600080fd5b50610289600d5481565b34801561068857600080fd5b50610202610697366004612268565b610f89565b3480156106a857600080fd5b506009546102899081565b3480156106bf57600080fd5b506102256106ce36600461246d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60606000805461070b90612497565b80601f016020809104026020016040519081016040528092919081815260200182805461073790612497565b80156107845780601f1061075957610100808354040283529160200191610784565b820191906000526020600020905b81548152906001019060200180831161076757829003601f168201915b5050505050905090565b600061079982610fae565b506000908152600460205260409020546001600160a01b031690565b60006107c082610cc5565b9050806001600160a01b0316836001600160a01b0316036108325760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061084e575061084e81336106ce565b6108c05760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610829565b6108ca838361100d565b505050565b600e54600b54600c54600a546040516305d3b1d360e41b81526004810193909352600160401b820467ffffffffffffffff16602484015261ffff16604483015263ffffffff808216606484015264010000000090910416608482015260009182916001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af1158015610964573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098891906124d1565b6000818152601060205260409081902080546001600160a01b03191633179055519091507faa7f137f33e9e340f3b7913f08acdde444b9a6d59173ad46edc378bd024b8779906109db9083815260200190565b60405180910390a1919050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a625760405163073e64fd60e21b81523360048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152604401610829565b610a6c828261107b565b5050565b610a7b335b82611432565b610a975760405162461bcd60e51b8152600401610829906124ea565b6108ca8383836114b1565b6000610aad81611615565b50600c805467ffffffffffffffff909216600160401b026fffffffffffffffff000000000000000019909216919091179055565b6000610aec81611615565b50600b55565b600082815260066020526040902060010154610b0d81611615565b6108ca838361161f565b6001600160a01b0381163314610b875760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610829565b610a6c82826116a5565b6000610b9c81611615565b610baa600980546001019055565b6000610bb560095490565b90506000600f610bc48561170c565b604051602001610bd5929190612537565b6040516020818303038152906040529050610bf0858361179f565b8060116000610bfe60095490565b81526020019081526020016000209081610c18919061260c565b50604080516001600160a01b0387168152602081018490527f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe910160405180910390a15050505050565b6108ca83838360405180602001604052806000815250610e8f565b610c8633610a75565b610ca25760405162461bcd60e51b8152600401610829906124ea565b610cab816117b9565b50565b6000610cb981611615565b600f6108ca838261260c565b6000818152600260205260408120546001600160a01b031680610d255760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610829565b92915050565b600f8054610d3890612497565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6490612497565b8015610db15780601f10610d8657610100808354040283529160200191610db1565b820191906000526020600020905b815481529060010190602001808311610d9457829003601f168201915b505050505081565b6000610a6c81611615565b60006001600160a01b038216610e2e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610829565b506001600160a01b031660009081526003602052604090205490565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606001805461070b90612497565b610a6c33838361184e565b610e993383611432565b610eb55760405162461bcd60e51b8152600401610829906124ea565b610ec18484848461191c565b50505050565b6000610ed281611615565b81610edf57610a6c61194f565b610a6c6119a1565b6000818152601160205260409020805460609190610f0490612497565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3090612497565b8015610f7d5780601f10610f5257610100808354040283529160200191610f7d565b820191906000526020600020905b815481529060010190602001808311610f6057829003601f168201915b50505050509050919050565b600082815260066020526040902060010154610fa481611615565b6108ca83836116a5565b6000818152600260205260409020546001600160a01b0316610cab5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610829565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061104282610cc5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611089600980546001019055565b600061109460095490565b6000848152601060209081526040808320548484526012909252822085519394506001600160a01b039091169290916009918691906110d5576110d56126cc565b60200260200101516110e791906126e2565b60000361112b576001808201805460029260ff1990911690835b021790555083600181518110611119576111196126cc565b60209081029190910101518155611368565b600884600081518110611140576111406126cc565b602002602001015161115291906126e2565b600003611170576001808201805460069260ff199091169083611101565b600784600081518110611185576111856126cc565b602002602001015161119791906126e2565b6000036111b5576001808201805460009260ff199091169083611101565b6006846000815181106111ca576111ca6126cc565b60200260200101516111dc91906126e2565b6000036111f5576001818101805460ff19168280611101565b60058460008151811061120a5761120a6126cc565b602002602001015161121c91906126e2565b60000361123a576001808201805460049260ff199091169083611101565b60048460008151811061124f5761124f6126cc565b602002602001015161126191906126e2565b60000361127f576001808201805460059260ff199091169083611101565b600384600081518110611294576112946126cc565b60200260200101516112a691906126e2565b6000036112c4576001808201805460039260ff199091169083611101565b6002846000815181106112d9576112d96126cc565b60200260200101516112eb91906126e2565b600003611309576001808201805460079260ff199091169083611101565b60018460008151811061131e5761131e6126cc565b602002602001015161133091906126e2565b600003611368576001818101805460ff191660081790558451859190811061135a5761135a6126cc565b602090810291909101015181555b6001810154600090600f906113909060ff16600881111561138b5761138b612335565b61170c565b6040516020016113a1929190612537565b60405160208183030381529060405290506113bc838561179f565b80601160006113ca60095490565b815260200190815260200160002090816113e4919061260c565b5060018201546040517f289c71d0d6d2c7afa2091c18278a04a3b8b3244a68987c28188fd2b3ff65e1ba916114229160ff9091169089908790612704565b60405180910390a1505050505050565b60008061143e83610cc5565b9050806001600160a01b0316846001600160a01b0316148061148557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806114a95750836001600160a01b031661149e8461078e565b6001600160a01b0316145b949350505050565b826001600160a01b03166114c482610cc5565b6001600160a01b0316146114ea5760405162461bcd60e51b815260040161082990612731565b6001600160a01b03821661154c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610829565b826001600160a01b031661155f82610cc5565b6001600160a01b0316146115855760405162461bcd60e51b815260040161082990612731565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610cab81336119de565b6116298282610e4a565b610a6c5760008281526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790556116613390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6116af8282610e4a565b15610a6c5760008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6060600061171983611a37565b600101905060008167ffffffffffffffff81111561173957611739612109565b6040519080825280601f01601f191660200182016040528015611763576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461176d57509392505050565b610a6c828260405180602001604052806000815250611b0f565b60006117c482610cc5565b90506117cf82610cc5565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b0316036118af5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610829565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6119278484846114b1565b61193384848484611b42565b610ec15760405162461bcd60e51b815260040161082990612776565b611957611c43565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6119a9611c8e565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119843390565b6119e88282610e4a565b610a6c576119f581611cd4565b611a00836020611ce6565b604051602001611a119291906127c8565b60408051601f198184030181529082905262461bcd60e51b825261082991600401612097565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611a765772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611aa2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611ac057662386f26fc10000830492506010015b6305f5e1008310611ad8576305f5e100830492506008015b6127108310611aec57612710830492506004015b60648310611afe576064830492506002015b600a8310610d255760010192915050565b611b198383611e89565b611b266000848484611b42565b6108ca5760405162461bcd60e51b815260040161082990612776565b60006001600160a01b0384163b15611c3857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611b8690339089908890889060040161283d565b6020604051808303816000875af1925050508015611bc1575060408051601f3d908101601f19168201909252611bbe9181019061287a565b60015b611c1e573d808015611bef576040519150601f19603f3d011682016040523d82523d6000602084013e611bf4565b606091505b508051600003611c165760405162461bcd60e51b815260040161082990612776565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506114a9565b506001949350505050565b60075460ff16611c8c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610829565b565b60075460ff1615611c8c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610829565b6060610d256001600160a01b03831660145b60606000611cf58360026128ad565b611d009060026128c4565b67ffffffffffffffff811115611d1857611d18612109565b6040519080825280601f01601f191660200182016040528015611d42576020820181803683370190505b509050600360fc1b81600081518110611d5d57611d5d6126cc565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d8c57611d8c6126cc565b60200101906001600160f81b031916908160001a9053506000611db08460026128ad565b611dbb9060016128c4565b90505b6001811115611e33576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611def57611def6126cc565b1a60f81b828281518110611e0557611e056126cc565b60200101906001600160f81b031916908160001a90535060049490941c93611e2c816128d7565b9050611dbe565b508315611e825760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610829565b9392505050565b6001600160a01b038216611edf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610829565b6000818152600260205260409020546001600160a01b031615611f445760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610829565b6000818152600260205260409020546001600160a01b031615611fa95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610829565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610cab57600080fd5b60006020828403121561203c57600080fd5b8135611e8281612014565b60005b8381101561206257818101518382015260200161204a565b50506000910152565b60008151808452612083816020860160208601612047565b601f01601f19169290920160200192915050565b602081526000611e82602083018461206b565b6000602082840312156120bc57600080fd5b5035919050565b80356001600160a01b03811681146120da57600080fd5b919050565b600080604083850312156120f257600080fd5b6120fb836120c3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561214857612148612109565b604052919050565b6000806040838503121561216357600080fd5b8235915060208084013567ffffffffffffffff8082111561218357600080fd5b818601915086601f83011261219757600080fd5b8135818111156121a9576121a9612109565b8060051b91506121ba84830161211f565b81815291830184019184810190898411156121d457600080fd5b938501935b838510156121f2578435825293850193908501906121d9565b8096505050505050509250929050565b60008060006060848603121561221757600080fd5b612220846120c3565b925061222e602085016120c3565b9150604084013590509250925092565b60006020828403121561225057600080fd5b813567ffffffffffffffff81168114611e8257600080fd5b6000806040838503121561227b57600080fd5b8235915061228b602084016120c3565b90509250929050565b600067ffffffffffffffff8311156122ae576122ae612109565b6122c1601f8401601f191660200161211f565b90508281528383830111156122d557600080fd5b828260208301376000602084830101529392505050565b6000602082840312156122fe57600080fd5b813567ffffffffffffffff81111561231557600080fd5b8201601f8101841361232657600080fd5b6114a984823560208401612294565b634e487b7160e01b600052602160045260246000fd5b6009811061236957634e487b7160e01b600052602160045260246000fd5b9052565b82815260408101611e82602083018461234b565b60006020828403121561239357600080fd5b611e82826120c3565b803580151581146120da57600080fd5b600080604083850312156123bf57600080fd5b6123c8836120c3565b915061228b6020840161239c565b600080600080608085870312156123ec57600080fd5b6123f5856120c3565b9350612403602086016120c3565b925060408501359150606085013567ffffffffffffffff81111561242657600080fd5b8501601f8101871361243757600080fd5b61244687823560208401612294565b91505092959194509250565b60006020828403121561246457600080fd5b611e828261239c565b6000806040838503121561248057600080fd5b612489836120c3565b915061228b602084016120c3565b600181811c908216806124ab57607f821691505b6020821081036124cb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156124e357600080fd5b5051919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600080845461254581612497565b6001828116801561255d5760018114612572576125a1565b60ff19841687528215158302870194506125a1565b8860005260208060002060005b858110156125985781548a82015290840190820161257f565b50505082870194505b5050505083516125b5818360208801612047565b01949350505050565b601f8211156108ca57600081815260208120601f850160051c810160208610156125e55750805b601f850160051c820191505b81811015612604578281556001016125f1565b505050505050565b815167ffffffffffffffff81111561262657612626612109565b61263a816126348454612497565b846125be565b602080601f83116001811461266f57600084156126575750858301515b600019600386901b1c1916600185901b178555612604565b600085815260208120601f198616915b8281101561269e5788860151825594840194600190910190840161267f565b50858210156126bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000826126ff57634e487b7160e01b600052601260045260246000fd5b500690565b60608101612712828661234b565b60208201939093526001600160a01b0391909116604090910152919050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612800816017850160208801612047565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612831816028840160208801612047565b01602801949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906128709083018461206b565b9695505050505050565b60006020828403121561288c57600080fd5b8151611e8281612014565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610d2557610d25612897565b80820180821115610d2557610d25612897565b6000816128e6576128e6612897565b50600019019056fea2646970667358221220e1ca998343c707d46b25f73c5108cc6bbb163361d81da181d7a553c7e32dbc1b64736f6c63430008130033";

type FishNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FishNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FishNFT__factory extends ContractFactory {
  constructor(...args: FishNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _VRFCoordinator: PromiseOrValue<string>,
    _keyhash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FishNFT> {
    return super.deploy(
      _subscriptionId,
      _VRFCoordinator,
      _keyhash,
      overrides || {}
    ) as Promise<FishNFT>;
  }
  override getDeployTransaction(
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _VRFCoordinator: PromiseOrValue<string>,
    _keyhash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _subscriptionId,
      _VRFCoordinator,
      _keyhash,
      overrides || {}
    );
  }
  override attach(address: string): FishNFT {
    return super.attach(address) as FishNFT;
  }
  override connect(signer: Signer): FishNFT__factory {
    return super.connect(signer) as FishNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FishNFTInterface {
    return new utils.Interface(_abi) as FishNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FishNFT {
    return new Contract(address, _abi, signerOrProvider) as FishNFT;
  }
}
